package Lives
import ObjectIdGenerator
import UnitObjEditing
import LinkedList
import HashMap
import ErrorHandling
import Players
import UtilCommands


let LIFE_UNIT_ID = compiletime(UNIT_ID_GEN.next())
let LIFE_UNIT_POS = vec2(-9000,9000) // Upper left corner

let playerLives = new HashMap<player, LinkedList<unit>> 

var lives = 0

public function setLives(int newLives)
    lives = newLives
    updateLives()

public function removeLife() returns int
    lives--
    updateLives()
    return lives

public function getLives() returns int
    return lives

function updateLives()
    for p in allPlayers
        p.setLives(lives)


public function player.getNumOfLives() returns int
    let lives =  playerLives.get(this)
    if( lives == null )
        error("Life list hasnt been initialized for "+this.getName())
    return lives.size()


public function player.setLives(int lives)
    if( playerLives.get(this) != null)
        this.removeAllLives()
    this.addLives(lives)
        
    

public function player.addLife()
    var lives = playerLives.get(this)

    if(lives == null)
        lives = new LinkedList<unit>
        playerLives.put(this, lives)
    
    let lifeUnit = createUnit(this, LIFE_UNIT_ID, LIFE_UNIT_POS, angle(0))
    ..setInvulnerable(true)
    ..pause()
    
    lives.add(lifeUnit)
    

public function player.addLives(int lives)
    for i=1 to lives
        this.addLife()


public function player.removeLife()
    let lives =  playerLives.get(this)
    if( lives == null )
        error("Life list hasnt been initialized for "+this.getName())
    if( lives.size() == 0 )
        error(this.getName() + " has 0 lives" )
    lives.pop().remove() 
    
    
public function player.removeAllLives()
    let lives =  playerLives.get(this)
    if( lives == null )
        error("Life list hasnt been initialized for "+this.getName())
    if( lives.size() > 0 )
        for i=1 to lives.size()
            this.removeLife()




//================================================================================================================================================================================================
init
    defineUtilCommand("setlives")
    ..addArgument(ArgumentType.INT)
    ..setAction() (p,args,opts) ->
        let newLives = args.getInt()
        if( newLives < 0 )
            p.print("\nLives must be larger than 0")
        else
            setLives(newLives)
            p.print("\nSet lives to {0}".format(lives.toString().highlight()))


//================================================================================================================================================================================================

@compiletime
function defineUnit()
    
    new UnitDefinition(LIFE_UNIT_ID, 'hfoo')
    ..setCanFlee(false)
    ..setHideMinimapDisplay(true)
    ..setFoodCost(1)
    ..setMovementType(MovementType.Fly)
    ..setCollisionSize(0)
    ..setModelFile("")
    ..setAttacksEnabled(0)    