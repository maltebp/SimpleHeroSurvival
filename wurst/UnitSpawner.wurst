package UnitSpawner

import TimerUtils
import public SoundUtils

public class UnitSpawner
//=========================================================================================================================================================

    // Settings

    private static constant boolean ACTIVATEONCONSTRUCT = true

// =========================================================================================================================================================

    // Class Variables

    // Instance Variables
    private real spawnFrequency
    private real spawnCount
    private real currentSpawnCount = 0
    private real spawnFrequencyDeviation
    private real startDelay
    private int  unitId
    private player owner
    private vec2 spawnPos
    private real spawnFacing = -1
    private rect spawnRect
    private group spawnedUnits
    private boolean randomSpawnPoint // Toggles it to spawn somewhere random in spawnRect
    private timer timer_Spawn
    private boolean isActivated = ACTIVATEONCONSTRUCT
    private string spawnEffect
    private boolean isRunning = false
    private unit targetOnSpawn
    private SoundDefinition soundOnspawn

    
// -------------------------------------------------------------------------------------------------------------------------------------
// Methods

    construct(int unitId, player owner, vec2 spawnPos, real spawnFrequency)
        this.unitId = unitId
        this.spawnFrequency = spawnFrequency
        this.startDelay =  spawnFrequency
        this.spawnPos = spawnPos

        if ACTIVATEONCONSTRUCT
            activate()


    ondestroy
        deactivate()

    function start()
        if not isActivated
            activate()

        isRunning = true
        timer_Spawn.start(startDelay, function spawn) 
        

    function stop()

    /** Stops the spawner, and removes all the units that it has made */
    function clear()

    /** Sets up the spawner (creating timers and triggers) */
    function activate()
        isActivated = true
        timer_Spawn = getTimer()..setData(this castTo int)
        spawnedUnits = CreateGroup()
    
    /** Releases timers and destroys triggers */
    function deactivate()
        isActivated = false
        timer_Spawn.release()
        spawnedUnits.destr()

    /** Sets the amount of that it will make before automatically stopping*/
    function setSpawnCount()

    /** Sets the start delay of the timer. Default startDelay is spawnFrequency. */
    function setStartDelay(real startDelay)
        this.startDelay = startDelay

    function setRandomSpawn()

    function setDeviation()

    /** Sets a fixed facing for spawned units.-1 sets it to random, which is default
        @param spawnFacing: the angle in radians. -1 sets it facing to random*/
    function setUnitSpawnFacing( real spawnFacing )
        this.spawnFacing = spawnFacing

    /** Spawns the unit, and if it's set, make effect and order attack*/
    private static function spawn()
        thistype instance = GetExpiredTimer().getData() castTo thistype
        angle spawnFacing = (instance.spawnFacing==-1) ? angle(GetRandomReal(0, 2*PI)) : angle(instance.spawnFacing)
        unit spawnedUnit = createUnit(instance.owner, instance.unitId, instance.spawnPos, spawnFacing)
        instance.spawnedUnits.addUnit(spawnedUnit)

        if instance.spawnEffect != null
            addEffect(instance.spawnEffect, instance.spawnPos )

        if instance.targetOnSpawn != null
            spawnedUnit.issueTargetOrder("attack", instance.targetOnSpawn)

        if instance.spawnCount != 0
            instance.currentSpawnCount++
            if instance.currentSpawnCount >= instance.spawnCount
                
        