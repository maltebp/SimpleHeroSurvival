// package ImpedingRoar

// import SoundUtils
// import RegisterEvents
// import AttackDamage
// import TimerUtils
// import InstantDummyCaster
// import Orders
// import HashMap
// import Damage
// import ChargeSystem
// import Enrage
// import TimedSpecialEffects
// import Artifact
// import BloodOfMannoroth
// import Frenzy
// import ClosureTimers
// import Stun
// import ObjectIdGenerator
// import BuffObjEditing
// import Icons
// import Effect
// import Assets
// import AbilityObjEditing
// import ObjectIds
// import ClosureForGroups
// import MyLibrary

// //=========================================================================================================================================================

// constant real BASEDAMAGE    = 20
// constant real DAMAGEFACTOR  = 0.5
// constant real RANGE         = 400
// constant real  DURATION      = 7
// constant int  CHARGE        = 20
// constant real COOLDOWN      = 14
// constant let  STUNDURATION  = 3.
// constant real ENRAGE_RANGEINC = 0.01 // Pr charge consumed

// constant int ABILITYID = 'A008'


// let WARDRUM_SPELLID = compiletime(ABIL_ID_GEN.next())
// let WARDRUM_BUFFID = compiletime(BUFF_ID_GEN.next())
// let WARDRUM_DURATION = 18.
// let WARDRUM_DMGINCREASE = 0.25

// // For Slow Factor: see ability in Editor

// //=========================================================================================================================================================


// constant SoundDefinition snd_OnCast= new SoundDefinition(Sounds.howlOfTerror, false, true)



// function onCast()
//     unit caster = GetSpellAbilityUnit()

//     snd_OnCast.playOnPoint(caster.getPos3Fly())

//     real enrageFactor = 1+ENRAGE_RANGEINC*caster.consumeEnrage()
//     group targets = ENUM_GROUP..enumUnitsInRange(caster.getPos(), RANGE*enrageFactor)

//     int charge = (caster.hasFrenzy() and caster.hasArtifact(ARTIFACT_BLOODOFMANNOROTH)) ? R2I(CHARGE * (1+BLOODOFMANNOROTH_CHARGEINC)) : CHARGE
//     caster.addCharge(charge)

//     real cooldown = COOLDOWN * (caster.getFrenzyCooldownReduction())
//     caster.setAbilityCooldown(ABILITYID, 1, cooldown)

//     if enrageFactor > 1
//         addEffect("Abilities\\Spells\\Orc\\WarStomp\\WarStompCaster.mdl",caster.getPos())
//         ..setDuration(4)
    

//     for target in targets
//         if target.getOwner().isAllyOf(caster.getOwner()) or not target.isAliveTrick() 
//             targets.removeUnit(target)

//     for target from targets
//         caster.damageTargetPhysical(target, BASEDAMAGE+I2R(caster.getTotalAttackDamage() ))
//         target.addEffect("Abilities\\Spells\\Human\\SpellSteal\\SpellStealMissile.mdl","chest")
//         ..destr()


//         let duration = (caster.hasArtifact(ARTIFACT_STANDARDOFTHEORCS)) ? DURATION+STUNDURATION : DURATION

//         doAfter(0.01) -> 
//             Buff.add(target, duration)

//         if enrageFactor > 1
//             target.addEffect("Abilities\\Spells\\Demon\\DemonBoltImpact\\DemonBoltImpact.mdl","chest")
//             ..destr()

//         if caster.hasArtifact(ARTIFACT_STANDARDOFTHEORCS)
//             target.stun(STUNDURATION)
            

//     if caster.hasArtifact(ARTIFACT_WARDRUM)
//         wardrumApplyBuff(caster)


// class Buff
//     private static HashMap<unit, thistype> targets = new HashMap<unit, thistype>

//     private unit target
//     private timer timer_Duration

//     construct(unit whichTarget)
//         target = whichTarget
//         InstantDummyCaster.castTarget(Player(PLAYER_NEUTRAL_AGGRESSIVE), 'A009', 1, Orders.slow, target)
//         timer_Duration = getTimer()..setData(this castTo int)
        

//     ondestroy
//         timer_Duration.release()
//         if target.isAliveTrick()
//             target.removeAbility('B001')
//         targets.remove(target)


//     static function add(unit whichTarget, real duration)   
        
//         if not targets.has(whichTarget)
//             targets.put(whichTarget, new Buff(whichTarget) )

//         targets.get(whichTarget).start(duration)

        
        
//     private function start(real duration)
//         timer_Duration.start(duration, function removeBuff)

//     static function removeBuff()
//         destroy GetExpiredTimer().getData() castTo thistype
                

// init
//     registerSpellEffectEvent(ABILITYID, function onCast)



// function wardrumApplyBuff(unit caster)

//     forUnitsInRange(caster.getPos(), RANGE) target ->
        
//         if target.isAliveTrick() and target.isAllyOf(caster)
//             InstantDummyCaster.castTarget(caster.getOwner(), WARDRUM_SPELLID, 1, Orders.innerfire, target)







// @compiletime
// function generateObjects()


//     new BuffDefinition(WARDRUM_BUFFID, 'Binf')
//     ..setIconNormal(1, Icons.bTNDrum)
//     ..setArtTarget(1, Abilities.barkSkinTarget)
//     ..setTooltipNormal(1, "War Drum")
//     ..setTooltipNormalExtended(1, "Has increased attack damage")
    

//     new AbilityDefinitionInnerFireCreep(WARDRUM_SPELLID)
//     ..setBuffs(1, WARDRUM_BUFFID.toRawCode())
//     ..setManaCost(1, 0)
//     ..setAnimationNames("")
//     ..setCastRange(1, 10000)
//     ..setCooldown(1, 0)
//     ..setEffectSound("")
//     ..setDurationHero(1, WARDRUM_DURATION)
//     ..setDurationNormal(1, WARDRUM_DURATION)
//     ..setDamageIncrease(1, WARDRUM_DMGINCREASE)
//     ..setDefenseIncrease(1, 0)

