package Frenzy

import SoundUtils
import RegisterEvents

import TimerUtils

import EnergySystem
import ChargeSystem
import Enrage
import Artifact

constant real REGENINCREASE = 0.5 // Percent
constant real  DURATION = 10
constant real ENRAGE_DURATIONINC = 0.01 // Per charge consumed

constant int CHARGE = 30

constant int ABILITYID = 'A006'
constant int BUFFID = 'B000'

constant SoundDefinition snd_OnCast= new SoundDefinition(Sounds.bloodlustTarget, false, true)


public function unit.hasFrenzy() returns boolean
    return this.getAbilityLevel(BUFFID) > 0


function endEffect()
    timer expiredTimer = GetExpiredTimer()

    Caster data = expiredTimer.getData() castTo Caster

    data.caster.reduceEnergyRegen(REGENINCREASE)
    
    expiredTimer.release()

    data.caster.removeAbility(BUFFID)
    

function onCast()
    unit caster = GetSpellAbilityUnit()

    if caster.hasArtifact(ARTIFACT_GIFTOFTHETAUREN)
        caster.resetAbilityCooldown('A005')
        caster.resetAbilityCooldown('A008')
        caster.resetAbilityCooldown('A01M')
        caster.resetAbilityCooldown('A000')
        caster.resetAbilityCooldown('A007')

    snd_OnCast.playOnPoint(caster.getPos3Fly())

    caster.increaseEnergyRegen(REGENINCREASE)
    
    caster.addCharge(CHARGE)

    real enrageFactor = 1+ENRAGE_DURATIONINC*caster.consumeEnrage()

    getTimer()
    ..setData( new Caster(caster) castTo int)
    ..start(DURATION*enrageFactor, function endEffect )

class Caster
    unit caster
             
    construct(unit caster)
        this.caster = caster

init
    registerSpellEffectEvent(ABILITYID, function onCast)
