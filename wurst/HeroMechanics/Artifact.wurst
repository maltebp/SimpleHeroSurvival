
// ==========================================================================================0

package Artifact

// ==========================================================================================

import HashMap
import ErrorHandling


public function unit.removeArtifact(int artifactNumber)

public function unit.removeAllArtifacts()

public function unit.addArtifact()


// ==========================================================================================

public constant int RACETYPE_ORC = '0000'
public constant int RACETYPE_HIGHELF =  '0000'
public constant int RACETYPE_NIGHTELF = '0000'

public unit array SHOP_ORC

public constant int MAXITEMSINSHOP = 12



/** The artifact's data */
public class Artifact
    

    private static IterableMap<int, thistype> artifacts = new IterableMap<int, thistype>

    private int raceType // Defined by a unit's id
    private int itemId
    private int maskId


    construct(int itemId, int maskId, int raceType)
        this.itemId = itemId
        this.maskId = maskId
        this.raceType = raceType
    
    
    /** Makes the artifact available to buy */
    function release()
        if raceType == RACETYPE_ORC
        


    /** Find the id of the artifact item matching the maskId */
    static function getItem(int maskId) returns int
        Artifact artifact = artifacts.get(maskId)

        if artifact == null
            error("Artifact doesn't exist")
            return 0

        else
            return artifact.itemId          
    
    
/** Mark a shop as an artifact shop for a race */
function setShop(unit shop, int raceType)    
    
    if raceType == RACETYPE_ORC
        
        int shopId = 0
        while SHOP_ORC[shopId] != null
            shopId++
        SHOP_ORC[shopId] = shop


// ==========================================================================================
init
    
    // Setup Items