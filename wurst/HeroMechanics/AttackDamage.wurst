package AttackDamage
import HashMap
import RegisterEvents

HashMap<unit, int> unitDamage = new HashMap<unit, int>

/** Gets the total attack damage of the unit (base + bonus)
    damage.*/
public function unit.getTotalAttackDamage() returns int
    return this.getBaseDamage(1) + this.getBonusAttackDamage()

/** Returns the bonus attack damage the unit has. It only
    includes bonus damage set through this package.*/
public function unit.getBonusAttackDamage() returns int
    if unitDamage.has(this)
        return unitDamage.get(this)
    else
        return 0

function unit.setBonusAttackDamage(int damage)
    
    if this.getAbilityLevel('A004') < 1
        this.addAbility('A004')
    
    int remainingDamage = damage

    int dmg100 = remainingDamage div 100
    remainingDamage -= dmg100*100

    int dmg10 = remainingDamage div 10
    remainingDamage -= dmg10*10

    int dmg1 = remainingDamage div 1

    this.setAbilityLevel('A003', dmg100+1)
    this.setAbilityLevel('A001', dmg10+1)
    this.setAbilityLevel('A002', dmg1+1)


function updateAttackDamage()
    unit unitToUpdate = GetManipulatingUnit()
    int totalDamage = 0

    if unitToUpdate.isType(UNIT_TYPE_HERO)
        
        for itemSlot=0 to 5
            int itemInSlot = UnitItemInSlot(unitToUpdate, itemSlot).getTypeId()
            if AttackDamageItem.items.has(itemInSlot)
                totalDamage += AttackDamageItem.items.get(itemInSlot)            

        if unitDamage.has(unitToUpdate)
            unitDamage.getAndRemove(unitToUpdate)
            
        unitDamage.put(unitToUpdate, totalDamage)
        unitToUpdate.setBonusAttackDamage(totalDamage)


class AttackDamageItem

    protected static HashMap<int,int> items = new HashMap<int,int>

    construct( int itemId, int attackDamage )
        items.put(itemId, attackDamage)

 
init
    Player(0).setAbilityAvailable('A004', false)

    new AttackDamageItem( 'I000', 5 )
    new AttackDamageItem( 'I00L', 10 )
    new AttackDamageItem( 'I00F', 10 )

    registerPlayerUnitEvent(EVENT_PLAYER_UNIT_PAWN_ITEM, function updateAttackDamage)
    registerPlayerUnitEvent(EVENT_PLAYER_UNIT_DROP_ITEM, function updateAttackDamage)
    registerPlayerUnitEvent(EVENT_PLAYER_UNIT_PICKUP_ITEM, function updateAttackDamage)
    registerPlayerUnitEvent(EVENT_PLAYER_UNIT_SELL_ITEM, function updateAttackDamage)
    registerPlayerUnitEvent(EVENT_PLAYER_UNIT_USE_ITEM, function updateAttackDamage)