package Round2

import public Round1
import TimerUtils
import MyLibrary
import TimedSpecialEffects
import UnitVisualsUtils



let SKELETONWARRIOR = 'u001'
let SKELETONARCHER = 'n007'
let NECROMANCER = 'u000'


init
    //=========================================================================================================================================================
    //  Necromancers 

    round = new Round
    ..setReward(30, 3)
    ..addAbilityReward(1)
    ..addItemRewards(ITEM_BONEGLOVES)
    ..setTitle("Necromancers")
    ..setDescription("If you think they stand alone, it will cost you dearly")

    ..setHealthOrbSpawn(100, 50, 0.1, 25, 0.02)

    RemoteFunction<UnitSpawner> func

    // Spawner 1
    func = (UnitSpawner spawner) -> begin
        new SummonSkeletons(spawner.getLastSpawnedUnit(), spawner)
    end

    round.addSpawner(new UnitSpawner('u000', ENEMYPLAYER, vec2(-639,1025), 10))
    ..setStartDelay(3)
    ..setFrequencyDeviation(0.1)
    ..setRandomSpawn(gg_rct_Arena_Spawn1)
    ..setNearestTargetOnSpawn(GetPlayableMapRect())
    ..setSpawnCount(12)
    ..setSpawnEffect("Abilities\\Spells\\Human\\Polymorph\\PolyMorphDoneGround.mdl")
    ..setCodeOnSpawn(func)

    //Spawner 2
    func = (UnitSpawner spawner) -> begin
        new SummonSkeletons(spawner.getLastSpawnedUnit(), spawner)
    end

    round.addSpawner(new UnitSpawner('u000', ENEMYPLAYER, vec2(527,1025), 24))
    ..setStartDelay(30)
    ..setFrequencyDeviation(0.01)
    ..setRandomSpawn(gg_rct_Arena_Spawn1)
    ..setNearestTargetOnSpawn(GetPlayableMapRect())
    ..setSpawnCount(4)
    ..setSpawnEffect("Abilities\\Spells\\Human\\Polymorph\\PolyMorphDoneGround.mdl")
    ..setCodeOnSpawn(func)

    //Spawner 3
    func = (UnitSpawner spawner) -> begin  
        new SummonSkeletons(spawner.getLastSpawnedUnit(), spawner)
    end

    round.addSpawner(new UnitSpawner('u000', ENEMYPLAYER, vec2(527,1025), 15))
    ..setStartDelay(70)
    ..setFrequencyDeviation(0.01)
    ..setRandomSpawn(gg_rct_Arena_Spawn1)
    ..setNearestTargetOnSpawn(GetPlayableMapRect())
    ..setSpawnCount(3)
    ..setSpawnEffect("Abilities\\Spells\\Human\\Polymorph\\PolyMorphDoneGround.mdl")
    ..setCodeOnSpawn(func)

    
enum SkeletonType
    WARRIOR
    ARCHER

class SummonSkeletons
    private static real SUMMON_FREQ = 22
    private static real SUMMON_STARTDELAY = 3
    private static real SUMMON_FREQDEVIATION = 1
    private static int SUMMONAMOUNT_ARCHER = 1
    private static int SUMMONAMOUNT_WARRIOR = 1

    private unit caster
    private timer timer_Summon
    private UnitSpawner spawner 

    construct(unit caster, UnitSpawner spawner)
        this.caster = caster
        this.spawner = spawner
        timer_Summon = getTimer()
        ..setData(this castTo int)
        
        startTimer(true)

    ondestroy
        timer_Summon
        ..pause()
        ..release()

    /** Starts the instance's timer with deviation*/
    private function startTimer(boolean firstStart)
        let spawnTime = (firstStart) ? GetRandomReal(SUMMON_STARTDELAY-SUMMON_FREQDEVIATION, SUMMON_STARTDELAY+SUMMON_FREQDEVIATION) : GetRandomReal(SUMMON_FREQ-SUMMON_FREQDEVIATION, SUMMON_FREQ+SUMMON_FREQDEVIATION)
        timer_Summon.start(spawnTime, function timerExpires)
    
    private static function timerExpires()
        GetExpiredTimer().getData() castTo thistype.summon()
    
    private function summon()

        if caster != null and caster.isAlive()
            caster.setAnimation("attack")

            unit skeleton
            let spawnPos = caster.getPos().polarOffset(angle(GetRandomReal(0, 2*PI)), 100)

            for int i = 0 to SUMMONAMOUNT_ARCHER-1
                skeleton = Skeleton.spawn(SkeletonType.ARCHER, spawnPos)
                spawner.addSummonedUnit(skeleton)

            for int i = 0 to SUMMONAMOUNT_WARRIOR-1
                skeleton = Skeleton.spawn(SkeletonType.WARRIOR, spawnPos)
                spawner.addSummonedUnit(skeleton) 

            startTimer(false)

        else
            destroy this


class Skeleton

    private unit skeleton
    private timer timer_Birth

    ondestroy
        timer_Birth.release()

    construct(SkeletonType whichType, vec2 whichPos)
        vec2 pos = whichPos
        let unitId = (whichType == SkeletonType.WARRIOR) ? 'u001' : 'n007'
        skeleton = createUnit(ENEMYPLAYER, unitId, pos, angle(GetRandomReal(0, 2*PI)))
        ..pause()
        ..setAnimation("birth")

        if not skeleton.getPos().isInRect(gg_rct_Arena_Visibility)
            pos = gg_rct_Arena_Visibility.getCenter()
            skeleton.setPos(pos)

        addEffect("Abilities\\Spells\\Undead\\RaiseSkeletonWarrior\\RaiseSkeleton.mdl", skeleton.getPos())
        ..setDuration(3)

        timer_Birth = getTimer()
        ..setData(this castTo int)
        ..start(2.333, function unpause)


    protected static function spawn( SkeletonType whichType, vec2 pos) returns unit
        let instance = new Skeleton(whichType, pos)
        return instance.skeleton

    private static function unpause()
        let instance = GetExpiredTimer().getData() castTo thistype
        if instance.skeleton != null and instance.skeleton.isAliveTrick()
            instance.skeleton.unpause()
            instance.skeleton.issueTargetOrder("attack", instance.skeleton.getNearestEnemyTargetInRect(gg_rct_Arena_Visibility))
            
        destroy instance
        
            
init
    UnitVisuals.addUnitType(NECROMANCER)
    ..setPlayerColor(PLAYER_COLOR_MAROON)

    UnitVisuals.addUnitType(SKELETONWARRIOR)
    ..setPlayerColor(PLAYER_COLOR_COAL)

    UnitVisuals.addUnitType(SKELETONARCHER)
    ..setPlayerColor(PLAYER_COLOR_COAL)


    

    
