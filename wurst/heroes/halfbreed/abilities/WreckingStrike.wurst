package WreckingStrike

import AbilityTools
import ClosureTimers

//================================================================================================================================================================================================
// Settings

let DMG_FACTOR          = 1.5
let DURATION            = 10.
let ARMOR_RED           = 8.


public let HALF_BREED_WRECKING_STRIKE_BUFF = compiletime(defineBuff(
    "Wrecking Strike",
    "Reduced armor.",
    Icons.bTNCorpseExplode,
    10,
    Abilities.crippleTarget,
    "origin",
    ""
))

public let HALF_BREED_WRECKING_STRIKE = compiletime(defineSingleTarget3(
    "Wrecking Strike",
    "Attempt at executing an enemy, dealing {0} of you power in damage. If the execution is succesful, the cooldown of the ability will be reset",
    Icons.bTNCorpseExplode,
    "R",
    12,      // Cooldown
    10,     // Mana
    MELEE_RANGE,    // Range
    "attack"
))

let SND_ON_ATTACK = [
    new SoundDefinition(Sounds.metalHeavyBashMetal1, false, true),
    new SoundDefinition(Sounds.metalHeavyBashMetal2, false, true),
    new SoundDefinition(Sounds.metalHeavyBashMetal3, false, true)
]

let SND_ON_ATTACK_2 = new SoundDefinition(Sounds.shockwave, false, true)



//================================================================================================================================================================================================

init
    registerSpellEffectEvent(HALF_BREED_WRECKING_STRIKE) ->
        onCast()

function onCast()
    let caster = GetSpellAbilityUnit()
    let target = GetSpellTargetUnit()

    let damage = caster.getDamage() * DMG_FACTOR

    caster.damageTargetPhysical(target, damage)
    target.addEffect(Abilities.stampedeMissileDeath, "chest")..setDuration(3)
    target.addEffect(Abilities.ancientProtectorMissile, "chest")..destr()
    SND_ON_ATTACK[GetRandomInt(0, 2)].playOnPoint(target.getPos3Real())
    SND_ON_ATTACK_2.playOnPoint(target.getPos3Real())

    target.applyBuff(HALF_BREED_WRECKING_STRIKE_BUFF)
    target.adjustArmorFlat(-ARMOR_RED)
    doAfter(DURATION) ->
        if( target != null )
            target.adjustArmorFlat(ARMOR_RED)
    



    

