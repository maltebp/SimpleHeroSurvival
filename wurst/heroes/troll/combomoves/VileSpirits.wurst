package VileSpirits
import MyLibrary
import PlayerMouse
import Orders
import Assets
import HeroDefaults
import HoverAbility
import AbilityCreation
import TrollAnimations
import ComboSystem
import GroupUtils
import Miss
import LinkedList
import ErrorHandling
import ClosureTimers
import RandomAngle
import Updater
import UnitStatsSystem
import SoundDefinitions
import SoulDrainData

// =========================================================================================================

let UNIT_ID = 'n015'
let NUMBER_OF_SPIRITS = 2

let RANGE = 1000.
let AIMASSIST = DEFAULT_AIMASSIST

let DURATION =  20.

let SPIRIT_MOVESPEED = 300.
let SPIRIT_ATTACKSPEED = 1.5
let SPIRIT_DAMAGEFACTOR = 0.4


// =========================================================================================================


public let VILESPIRITS_ID  = compiletime( createComboMove("Vile Spirits", "Do a slam dunk!", Icons.bTNCannibalize, Icons.bTNCannibalize,9))
let ABIL_DEF = new PointAbility( VILESPIRITS_ID.useAbil, RANGE, ANIM_TROLL_SPELL)
public let COMBO_VILESPIRITS = new ComboMove( VILESPIRITS_ID, COMBO_POINT_W, COMBO_POINT_Q, COMBO_POINT_Q )

init
    ABIL_DEF
    ..onEffect() ( caster, pos ) ->
        let targets = ENUM_GROUP..enumEnemyTargets( caster.getOwner(), pos, AIMASSIST)
        
        let target = targets.getNearestUnit(pos)

        if target != null
            var casterInstance = VileSpiritsCaster.getInstance(caster)

            if casterInstance != null
                casterInstance.removeSpirits()
            
            casterInstance = new VileSpiritsCaster(caster)

            SND_SPIRITWOLF_BIRTH.playOnPoint(pos.withTerrainZ())
                
            var angle = randomAngle()
        
            for i=1 to NUMBER_OF_SPIRITS
                let spawnPos = caster.getPos().polarOffset( angle, 125)
                casterInstance.newSpirit(target, spawnPos, DURATION).spirit
                ..setAttackCooldown( SPIRIT_ATTACKSPEED, 1)
                ..setMoveSpeed( SPIRIT_MOVESPEED)
                ..setBaseDamage( (caster.getDamage() * SPIRIT_DAMAGEFACTOR).toInt(), 1)
                angle += angle(2)
            
            caster.reduceCharge( SOUL_DRAIN_COMBOMOVE_2)

        else
            caster.missAttack()

        caster.clearCombo()





class VileSpiritsCaster
    
    protected static let instances = new LinkedList<thistype>

    protected unit caster = null
    protected let spirits = new LinkedList<VileSpirit>
    protected CallbackSingle durationCb

    construct( unit caster )
        this.caster = caster
        instances.add(this)


    ondestroy
        for spirit in spirits
            if spirit == null
                error("Spirit is null")
            else
                destroy spirit

        destroy spirits

        instances.remove(this)


    function removeSpirit( VileSpirit spirit )
        if spirits.has(spirit)
            spirits.remove(spirit)
        if spirits.size() == 0
            destroy this
    
    function removeSpirits()
        for spirit in spirits
            if spirit == null
                error("Spirit is null")
            else
                destroy spirit
        

    function newSpirit( unit target, vec2 spawnPos, real duration ) returns VileSpirit
        let spirit = new VileSpirit(this, target, spawnPos, duration)
        spirits.add( spirit )
        return spirit
    

    static function getInstance(unit whichUnit) returns thistype
        for instance in instances
            if instance.caster == whichUnit
                return instance
        return null



class VileSpirit extends Updater

    protected unit spirit
    protected unit target
    protected VileSpiritsCaster caster

    protected effect array[2] sfx

    protected CallbackSingle durationCb = null

    construct( VileSpiritsCaster caster, unit target, vec2 spawnPos, real duration )
        spirit = createUnit( caster.caster.getOwner(), UNIT_ID, spawnPos, randomAngle() )
        ..setVertexColor(colorA(255,30,30,150))
        addEffect( Abilities.stampedeMissileDeath, spawnPos.withTerrainZ(30))
        ..destr()
        // addEffect( Abilities.feralspirittarget, spawnPos.withTerrainZ(30))
        // ..destr()

        sfx[0] = spirit.addEffect( Objects.humanBloodRifleman, "chest")..setTimeScale(0.75)
        sfx[1] = spirit.addEffect( Objects.humanBloodRifleman, "head")..setTime(1)

        this.caster = caster
        this.target = target

        if target != null
            spirit.issueTargetOrderById( Orders.attack, target)

        updateFreq = 0.25
        startUpdate()

        durationCb = doAfter(duration) ->
            durationCb = null
            destroy this

    ondestroy
        if durationCb != null
            destroy durationCb
        
        addEffect( Objects.humanLargeDeathExplode, spirit.getPos().withTerrainZ(30))
        ..setScale(0.6)
        ..destr()
        addEffect( Abilities.stampedeMissileDeath, spirit.getPos().withTerrainZ(30))
        ..destr()

        sfx[0].destr()
        sfx[1].destr()

        caster.removeSpirit(this)
    
        spirit.remove()

    override function update()
        if caster != null and caster.caster.isAlive()
            if target == null or not target.isAlive()
                let targets = ENUM_GROUP..enumEnemyTargets( spirit.getOwner(), spirit.getPos(), 3000 )
                if targets.size() > 0
                    let target = targets.getNearestUnit( spirit.getPos())
                    spirit.issueTargetOrderById(Orders.attack, target)
        else
            destroy this
            

        