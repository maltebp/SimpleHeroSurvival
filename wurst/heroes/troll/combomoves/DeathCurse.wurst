package DeathCurse
import HeroDefaults
import AbilityCreation
import HoverAbility
import TrollAnimations
import ComboSystem
import MyLibrary
import GroupUtils
import Miss
import LinkedList
import ClosureTimers
import Damage
import Abilities
import BuffObjEditing
import Updater
import UnitStatsSystem
import SoundDefinitions
import SoulDrainData


// =========================================================================================================

let RANGE = DEFAULT_CASTRANGE
let AIMASSIST = DEFAULT_AIMASSIST

let DAMAGE_FACTOR = 2.5
let DELAY = 8.
let STACKS = 2


// =========================================================================================================


public let DEATHCURSE_ID  = compiletime( createComboMove("Death Curse", "Do a slam dunk!", Icons.bTNDoom, Icons.bTNDoom,3))
let ABIL_DEF = new PointAbility( DEATHCURSE_ID.useAbil, RANGE, ANIM_TROLL_SPELL)
public let COMBO_DEATHCURSE = new ComboMove( DEATHCURSE_ID, COMBO_POINT_Q, COMBO_POINT_Q, null )

init
    ABIL_DEF
    ..onEffect() ( caster, pos ) ->
        let targets = ENUM_GROUP..enumEnemyTargets( caster.getOwner(), pos, AIMASSIST)
        
        let target = targets.getNearestUnit(pos)

        if target != null
            target.addEffect( Abilities.aIilTarget, "origin")
            caster.castBuff(target, DELAY, caster.getDamage() * DAMAGE_FACTOR)   
            SND_BANISHCASTER.playOnPoint(target.getPos().withTerrainZ())     

            caster.reduceCharge( SOUL_DRAIN_COMBOMOVE_2)

        else
            caster.missAttack()

        caster.clearCombo()


public function unit.castBuff( unit target, real delay, real damage )
    var instance = DeathCurseBuff.getInstance(this, target)
    if instance == null
        new DeathCurseBuff(this, target, delay, damage)
    else
        instance.applyExtraStack(damage)
    

class DeathCurseBuff extends Updater

    static let instances = new LinkedList<thistype>

    unit caster
    unit target
    real damage

    effect buffSfx

    int stacks = 1

    CallbackSingle delayCb


    construct( unit caster, unit target, real delay, real damage )

        this.caster = caster
        this.target = target
        this.damage = damage

        instances.add(this)

        buffSfx = target.addEffect( Abilities.curseTarget, "overhead")

        delayCb = doAfter(delay) ->
            delayCb = null
            finish()

        updateFreq = 0.25
        startUpdate()
        


    override function update()
        if target == null or not target.isAlive()
            destroy this


    function applyExtraStack(real damage)
        stacks++
        this.damage += damage


    function finish()
        if target != null and target.isAlive()
            caster.damageTargetSpell(target, damage)
            target.addEffect( Abilities.raiseSkeleton, "origin" ).destr()
            target.addEffect( Abilities.avengerMissile, "chest").destr()
            SND_BIGBADVOODOO.playOnPoint(target.getPos3Real())
        
        destroy this


    static function getInstance(unit caster, unit target) returns thistype
        for instance in instances
            if instance.caster == caster and instance.target == target
                return instance
        return null


    ondestroy
        if delayCb != null
            destroy delayCb
        
        if target != null
            buffSfx.destr()

        instances.remove(this)

    