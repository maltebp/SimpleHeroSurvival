// ================================================================================================================================

package Gladiator

// -----------------------------------------------------------------------------------------------------------------------------

import          LinkedList
import public   SoundUtils
import          ErrorHandling
import          HashMap


// ================================================================================================================================
// Other functions





// ================================================================================================================================
public class Gladiator



    private static LinkedList<thistype> instances = new LinkedList<thistype>

    private unit            gladiatorUnit
    private GladiatorType   gladiatorType
    private player          owner


    construct(GladiatorType whichType, player owner, vec2 spawnPos, angle facing )
        this.owner = owner
        gladiatorType = whichType
        gladiatorUnit = createUnit(owner, gladiatorType.getUnitType(), spawnPos, facing)
        ..addAbility(gladiatorType.QAbility)
        ..addAbility(gladiatorType.WAbility)
        ..addAbility(gladiatorType.EAbility)
        
        instances.add(this)


    /** Releases an ability, adding it to the gladiator unit. The abilityNumber is the number in the list */
    function releaseAbility(int abilityNumber) returns string
        int abilityId = gladiatorType.getAbility(abilityNumber)
        
        if gladiatorUnit.getAbilityLevel(abilityId) > 0
            error(gladiatorUnit.getProperName()+" already has that ability")

        else
            gladiatorUnit.addAbility(abilityId)

        return GetAbilityName(abilityId)


    function getUnit() returns unit
        return gladiatorUnit


    function getSoundOnSpawn() returns SoundDefinition
        return gladiatorType.getSoundOnSpawn()


    function getSoundOnRespawn() returns SoundDefinition
        return gladiatorType.getSoundOnRespawn()


    function getSoundOnNewAbility() returns SoundDefinition
        return gladiatorType.getSoundOnNewAbility()

    
    function getOwner() returns player
        return owner

    function getColor() returns string
        return gladiatorType.getColor()
    

    static function isUnitGladiator(unit whichUnit) returns boolean
        return getInstance(whichUnit) != null


    static function getInstance(unit  whichUnit) returns Gladiator
        for instance in instances
            if instance.gladiatorUnit == whichUnit
                return instance
        return null

    static function getInstance(player whichPlayer) returns Gladiator
        for instance in instances
            if instance.owner == whichPlayer
                return instance
        return null




// ================================================================================================================================
public class GladiatorType

    private static boolean hasBeenInitialized

    private int unitType

    private string name

    private string color

    protected int QAbility
    protected int WAbility
    protected int EAbility

    private LinkedList<int> abilities = new LinkedList<int>

    private SoundDefinition snd_Spawn = null
    private SoundDefinition snd_Respawn = null
    private SoundDefinition snd_NewAbility = null




        
    function setUnitType(int unitType)
        this.unitType = unitType

        unit tempUnit = createUnit(Player(PLAYER_NEUTRAL_PASSIVE), unitType, vec2(0,0),angle(0))
        name = tempUnit.getName()
        tempUnit.remove()


    function setSoundOnSpawn(string soundPath)
        snd_Spawn = new SoundDefinition(soundPath, false)


    function setSoundOnRespawn(string soundPath)
        snd_Respawn = new SoundDefinition(soundPath, false)


    function setSoundOnNewAbility(string soundPath)
        snd_NewAbility = new SoundDefinition(soundPath, false)
    

    function setColor(string color)
        this.color = color

    function addAbilities(vararg int abilities)
        for abil in abilities
            this.abilities.add(abil)


    function getSoundOnSpawn() returns SoundDefinition
        checkInit()
        return snd_Spawn 


    function getSoundOnRespawn() returns SoundDefinition
        checkInit()
        return snd_Respawn


    function getSoundOnNewAbility() returns SoundDefinition
        checkInit()     
        return snd_NewAbility


    function getAbility(int number) returns int
        checkInit()
        return abilities.get(number)         
    

    function getAllAbilities() returns LinkedList<int>
        checkInit() 
        return null


    function getUnitType() returns int
        checkInit() 
        return unitType

    function getColor() returns string
        checkInit()
        return color

    function setBaseAbilities( int q, int w, int e)
        QAbility = q
        WAbility = w
        EAbility = e

    private static function checkInit()
        if not hasBeenInitialized
            initialize()
        

        
// ================================================================================================================================
// GLADIATOR TYPE SETUP

    private static function initialize()
        hasBeenInitialized = true

        



        
        
