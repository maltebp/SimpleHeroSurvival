
package HoverAbility
import PlayerMouse
import ActionAnimation
import AbilityCasting
import HoverAbilityCasting
import RegisterEvents
import HashMap
import ErrorHandling

public abstract class AbilityDef

    private static let instances = new IterableMap<int, thistype>
    
    protected int abilityId 

    protected Animation animation = null
    protected Adjustments adjustments = null
    protected CastCriteria castCriteria = null

    protected boolean isChannel = false
    protected real effectFreq = 0
    protected real duration = 0
    protected boolean interruptible = false
    protected boolean queueStandReady = false

    construct( int abilityId, Animation animation )
        this.abilityId = abilityId
        this.animation = animation

        instances.put(abilityId, this)

        registerSpellEffectEvent( abilityId, function onCast )

    function enableChannel( real effectFreq, real duration, boolean interruptible )
        isChannel = true
        this.effectFreq = effectFreq
        this.duration = duration
        this.interruptible = interruptible

    function addAdjustments( Adjustments adjustments )
        this.adjustments = adjustments

    static function getInstance(int abilityId) returns thistype
        if instances.has(abilityId)
            return instances.get(abilityId)
        else
            error("Ability doesn't exist")
            return null

    function isChannel() returns boolean
        return isChannel

    function getAnimation() returns Animation
        return animation

    function getAdjustments() returns Adjustments
        return adjustments

    function getEffectFreq() returns real
        return effectFreq

    function getDuration() returns real
        return duration

    function isInterruptible() returns boolean
        return interruptible

    function setCastCritera( CastCriteria criteria )
        this.castCriteria = criteria

    function getCastCriteria() returns CastCriteria
        return castCriteria

    function evaluateCastCriteria( unit caster) returns boolean
        if castCriteria == null
            return true
        return castCriteria.evaluate(caster)

    function queueStandReady()
        queueStandReady = true

    function shouldQueueStandReady() returns boolean
        return queueStandReady


public class PointAbility extends AbilityDef
    private real castRange
    private boolean facingRequired = true 

    private AbilityPointAction onEffect = null
    private AbilityPointAction onCast = null
    private AbilityPointAction onFinish = null

    construct( int abilityId, real castRange, Animation animation )
        super(abilityId, animation)
        this.castRange = castRange

    function onEffect( AbilityPointAction onEffect )
        this.onEffect = onEffect

    function onCast( AbilityPointAction onCast )
        this.onCast = onCast

    function onFinish( AbilityPointAction onFinish )
        this.onFinish = onFinish

    function getOnEffect() returns AbilityPointAction
        return onEffect

    function getOnFinish() returns AbilityPointAction
        return onFinish
    
    function getOnCast() returns AbilityPointAction
        return onCast

    function getCastRange() returns real
        return castRange

    function facingRequired() returns boolean
        return facingRequired

    function disableFacingRequired()
        facingRequired = false


   
    


public class ImmediateAbility extends AbilityDef

    private AbilityImmediateAction onEffect = null

    construct( int abilityId )
        super(abilityId, null)

    function onEffect( AbilityImmediateAction onEffect )
        this.onEffect = onEffect

    function getOnEffect() returns AbilityImmediateAction
        return onEffect



public class NoTargetAbility extends AbilityDef
    
    private AbilityImmediateAction onEffect = null
    private AbilityImmediateAction onCast = null
    private AbilityImmediateAction onFinish = null

    construct( int abilityId, Animation animation )
        super(abilityId, animation)

    function onEffect( AbilityImmediateAction onEffect )
        this.onEffect = onEffect

    function onCast( AbilityImmediateAction onCast )
        this.onCast = onCast

    function onFinish( AbilityImmediateAction onFinish )
        this.onFinish = onFinish

    function getOnEffect() returns AbilityImmediateAction
        return onEffect

    function getOnCast() returns AbilityImmediateAction
        return onCast


interface AbilityPointAction
    function run( unit caster, vec2 position )

interface AbilityImmediateAction
    function run( unit caster )

interface Adjustments
    function run( unit caster, AbilityAdjustments adjustments )

interface CastCriteria
    function evaluate( unit caster ) returns boolean

public class AbilityAdjustments
    real castRange
    real channelFreq
    real channelDuration
    real speed = 0

    construct( real castRange, real channelFreq, real channelDuration )
        this.castRange = castRange
        this.channelDuration = channelDuration
        this.channelFreq = channelFreq


public function int.getAbilityDefinition() returns AbilityDef
    return AbilityDef.getInstance(this)
        

        
        
        
        